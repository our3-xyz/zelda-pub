/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FinalMarketplace,
  FinalMarketplaceInterface,
} from "../FinalMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "MarketItemAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "MarketItemPurchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollectionAddress",
        type: "address",
      },
    ],
    name: "addCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addMarketItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "buyMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionIndex",
        type: "uint256",
      },
    ],
    name: "chooseCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectionItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract NFTCollection",
        name: "",
        type: "address",
      },
    ],
    name: "collectionToItemId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItemsForSale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nftCollection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct FinalMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getItemsOwnedByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nftCollection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct FinalMarketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "nftCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftCollectionsArray",
    outputs: [
      {
        internalType: "contract NFTCollection",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620024883803806200248883398181016040528101906200003791906200018a565b60016000819055506200005f62000053620000a560201b60201c565b620000ad60201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a0818152505050620001da565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018481620001c0565b92915050565b6000602082840312156200019d57600080fd5b6000620001ad8482850162000173565b91505092915050565b6000819050919050565b620001cb81620001b6565b8114620001d757600080fd5b50565b60805160601c60a0516122776200021160003960008181610ded015261153d01526000818161090a0152610ba701526122776000f3fe6080604052600436106101095760003560e01c80637fd6f15c11610095578063a741bc6511610064578063a741bc6514610326578063b77f62c414610351578063bfb231d21461037a578063ca7dd375146103bc578063f2fde38b146103f957610109565b80637fd6f15c1461027c5780638da5cb5b146102a75780638e1de4b2146102d2578063a174e77a146102fd57610109565b806360f7401a116100dc57806360f7401a146101a957806365e17c9d146101e65780636bfb0d01146102115780636d4587de1461023c578063715018a61461026557610109565b8063064ddd041461010e57806309d3e1d814610139578063351901c3146101765780633ccfd60b14610192575b600080fd5b34801561011a57600080fd5b50610123610422565b6040516101309190611c5a565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b919061191f565b610703565b60405161016d9190611c7c565b60405180910390f35b610190600480360381019061018b919061191f565b610742565b005b34801561019e57600080fd5b506101a7610b0f565b005b3480156101b557600080fd5b506101d060048036038101906101cb91906118f6565b610b8d565b6040516101dd9190611d77565b60405180910390f35b3480156101f257600080fd5b506101fb610ba5565b6040516102089190611c08565b60405180910390f35b34801561021d57600080fd5b50610226610bc9565b6040516102339190611d77565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e919061191f565b610bcf565b005b34801561027157600080fd5b5061027a610d63565b005b34801561028857600080fd5b50610291610deb565b60405161029e9190611d77565b60405180910390f35b3480156102b357600080fd5b506102bc610e0f565b6040516102c99190611bed565b60405180910390f35b3480156102de57600080fd5b506102e7610e39565b6040516102f49190611c5a565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f919061187e565b61116a565b005b34801561033257600080fd5b5061033b6111d6565b6040516103489190611d77565b60405180910390f35b34801561035d57600080fd5b50610378600480360381019061037391906118a7565b6111dc565b005b34801561038657600080fd5b506103a1600480360381019061039c919061191f565b6114ae565b6040516103b396959493929190611d92565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de919061191f565b611537565b6040516103f09190611d77565b60405180910390f35b34801561040557600080fd5b50610420600480360381019061041b919061187e565b61159a565b005b606060005b6003548110156105c0576007600082815260200190815260200160002060040160149054906101000a900460ff166105b3576004600760008381526020019081526020016000209080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004820160149054906101000a900460ff168160040160146101000a81548160ff02191690831515021790555050505b8080600101915050610427565b506004805480602002602001604051908101604052809291908181526020016000905b828210156106fa57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581525050815260200190600101906105e3565b50505050905090565b6002818154811061071357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f90611d57565b60405180910390fd5b6002600081905550600061079b82611537565b905060006007600084815260200190815260200160002090506000831180156107c657506006548311155b610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc90611cf7565b60405180910390fd5b813414610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e90611d37565b60405180910390fd5b8060040160149054906101000a900460ff1615610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611c97565b60405180910390fd5b8060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f19350505050158015610907573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc8260030154846109529190611eff565b9081150290604051600060405180830381858888f1935050505015801561097d573d6000803e3d6000fd5b5060018160040160146101000a81548160ff0219169083151502179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600201546040518463ffffffff1660e01b8152600401610a0093929190611c23565b600060405180830381600087803b158015610a1a57600080fd5b505af1158015610a2e573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f30e831f2896cfdd24fb857606a44415b35b884c197eda621db44cdffef181e328685600201548660030154604051610afa93929190611df3565b60405180910390a45050600160008190555050565b610b17611692565b73ffffffffffffffffffffffffffffffffffffffff16610b35610e0f565b73ffffffffffffffffffffffffffffffffffffffff1614610b8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8290611d17565b60405180910390fd5b565b60086020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b60006008600060028481548110610c0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028181548110610cb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637757abaa6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d2157600080fd5b505afa158015610d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d599190611948565b6003819055505050565b610d6b611692565b73ffffffffffffffffffffffffffffffffffffffff16610d89610e0f565b73ffffffffffffffffffffffffffffffffffffffff1614610ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd690611d17565b60405180910390fd5b610de9600061169a565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060056000610e499190611760565b60005b600354811015611027573373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561101a576005600760008381526020019081526020016000209080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004820160149054906101000a900460ff168160040160146101000a81548160ff02191690831515021790555050505b8080600101915050610e4c565b506005805480602002602001604051908101604052809291908181526020016000905b8282101561116157838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1615151515815250508152602001906001019061104a565b50505050905090565b60008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60035481565b60026000541415611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121990611d57565b60405180910390fd5b60026000819055506000811161126d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126490611cb7565b60405180910390fd5b6006600081548092919061128090611ff9565b91905055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016112c293929190611c23565b600060405180830381600087803b1580156112dc57600080fd5b505af11580156112f0573d6000803e3d6000fd5b505050506040518060c0016040528060065481526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506007600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb54cfb19ffaa1fa935ff42ab669df81eab47ebe90fb3bcb92ace1d123dd176bb600654858560405161149993929190611df3565b60405180910390a36001600081905550505050565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b600060647f00000000000000000000000000000000000000000000000000000000000000006115669190611e74565b60646115729190611eff565b60076000848152602001908152602001600020600301546115939190611ea5565b9050919050565b6115a2611692565b73ffffffffffffffffffffffffffffffffffffffff166115c0610e0f565b73ffffffffffffffffffffffffffffffffffffffff1614611616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160d90611d17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90611cd7565b60405180910390fd5b61168f8161169a565b50565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50805460008255600502906000526020600020908101906117819190611784565b50565b5b80821115611811576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549060ff021916905550600501611785565b5090565b600081359050611824816121e5565b92915050565b600081359050611839816121fc565b92915050565b60008135905061184e81612213565b92915050565b6000813590506118638161222a565b92915050565b6000815190506118788161222a565b92915050565b60006020828403121561189057600080fd5b600061189e84828501611815565b91505092915050565b6000806000606084860312156118bc57600080fd5b60006118ca8682870161182a565b93505060206118db86828701611854565b92505060406118ec86828701611854565b9150509250925092565b60006020828403121561190857600080fd5b60006119168482850161183f565b91505092915050565b60006020828403121561193157600080fd5b600061193f84828501611854565b91505092915050565b60006020828403121561195a57600080fd5b600061196884828501611869565b91505092915050565b600061197d8383611b54565b60c08301905092915050565b61199281611f45565b82525050565b6119a181611f45565b82525050565b6119b081611f33565b82525050565b60006119c182611e3a565b6119cb8185611e52565b93506119d683611e2a565b8060005b83811015611a075781516119ee8882611971565b97506119f983611e45565b9250506001810190506119da565b5085935050505092915050565b611a1d81611f57565b82525050565b611a2c81611f57565b82525050565b611a3b81611fb1565b82525050565b611a4a81611fb1565b82525050565b611a5981611fd5565b82525050565b6000611a6c601183611e63565b9150611a77826120a0565b602082019050919050565b6000611a8f601f83611e63565b9150611a9a826120c9565b602082019050919050565b6000611ab2602683611e63565b9150611abd826120f2565b604082019050919050565b6000611ad5601283611e63565b9150611ae082612141565b602082019050919050565b6000611af8602083611e63565b9150611b038261216a565b602082019050919050565b6000611b1b601083611e63565b9150611b2682612193565b602082019050919050565b6000611b3e601f83611e63565b9150611b49826121bc565b602082019050919050565b60c082016000820151611b6a6000850182611bcf565b506020820151611b7d6020850182611a32565b506040820151611b906040850182611bcf565b506060820151611ba36060850182611bcf565b506080820151611bb66080850182611989565b5060a0820151611bc960a0850182611a14565b50505050565b611bd881611fa7565b82525050565b611be781611fa7565b82525050565b6000602082019050611c0260008301846119a7565b92915050565b6000602082019050611c1d6000830184611998565b92915050565b6000606082019050611c3860008301866119a7565b611c4560208301856119a7565b611c526040830184611bde565b949350505050565b60006020820190508181036000830152611c7481846119b6565b905092915050565b6000602082019050611c916000830184611a50565b92915050565b60006020820190508181036000830152611cb081611a5f565b9050919050565b60006020820190508181036000830152611cd081611a82565b9050919050565b60006020820190508181036000830152611cf081611aa5565b9050919050565b60006020820190508181036000830152611d1081611ac8565b9050919050565b60006020820190508181036000830152611d3081611aeb565b9050919050565b60006020820190508181036000830152611d5081611b0e565b9050919050565b60006020820190508181036000830152611d7081611b31565b9050919050565b6000602082019050611d8c6000830184611bde565b92915050565b600060c082019050611da76000830189611bde565b611db46020830188611a41565b611dc16040830187611bde565b611dce6060830186611bde565b611ddb6080830185611998565b611de860a0830184611a23565b979650505050505050565b6000606082019050611e086000830186611bde565b611e156020830185611bde565b611e226040830184611bde565b949350505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611e7f82611fa7565b9150611e8a83611fa7565b925082611e9a57611e99612071565b5b828204905092915050565b6000611eb082611fa7565b9150611ebb83611fa7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ef457611ef3612042565b5b828202905092915050565b6000611f0a82611fa7565b9150611f1583611fa7565b925082821015611f2857611f27612042565b5b828203905092915050565b6000611f3e82611f87565b9050919050565b6000611f5082611f87565b9050919050565b60008115159050919050565b6000611f6e82611f33565b9050919050565b6000611f8082611f33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611fbc82611fc3565b9050919050565b6000611fce82611f87565b9050919050565b6000611fe082611fe7565b9050919050565b6000611ff282611f87565b9050919050565b600061200482611fa7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561203757612036612042565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f6974656d20616c726561647920736f6c64000000000000000000000000000000600082015250565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6974656d20646f65736e27742065786973740000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6e6f7420656e6f756768206d6f6e657900000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6121ee81611f33565b81146121f957600080fd5b50565b61220581611f63565b811461221057600080fd5b50565b61221c81611f75565b811461222757600080fd5b50565b61223381611fa7565b811461223e57600080fd5b5056fea26469706673582212200ffc74262342976e77bc956ce95f4eb6425002fa61e1770d587e48b2f6f4264c64736f6c63430008040033";

export class FinalMarketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FinalMarketplace> {
    return super.deploy(
      _feePercent,
      overrides || {}
    ) as Promise<FinalMarketplace>;
  }
  getDeployTransaction(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feePercent, overrides || {});
  }
  attach(address: string): FinalMarketplace {
    return super.attach(address) as FinalMarketplace;
  }
  connect(signer: Signer): FinalMarketplace__factory {
    return super.connect(signer) as FinalMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FinalMarketplaceInterface {
    return new utils.Interface(_abi) as FinalMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FinalMarketplace {
    return new Contract(address, _abi, signerOrProvider) as FinalMarketplace;
  }
}
